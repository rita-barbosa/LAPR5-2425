@startuml
'https://plantuml.com/sequence-diagram

title US 5.1.20 Process View (Level 3)

autonumber

participant "<<route>>\n Routing" as ROUTE
participant "<<controller>>\n OperationTypeController" as CONTROL

participant "<<service>>\n SpecializationService" as SpecializationServ
participant "<<repository>>\n SpecializationRepository" as SpecializationRepo
participant "<<dto>>\n SpecializationDTO" as SpecializationDTO

participant "<<service>>\n RoleService" as RoleServ
participant "<<repository>>\n RoleRepository" as RoleRepo
participant "<<dto>>\n RoleDTO" as RoleDTO


participant "<<dto>>\n StaffSpecializationAndRoleResponseDTO " as ResponseDTO

participant "<<dto>>\n OperationTypeDTO" as OPTYDTO
participant "<<service>>\n OperationTypeService" as OPTYServ
participant "<<repository>>\n OperationTypeRepository" as OPTYRepo
participant "<<domain>>\n OperationType" as OPTY

participant "<<domain>>\n Phase" as PHASE


[o-> ROUTE : GET()
activate ROUTE

ROUTE -> CONTROL : getAllSpecializationsAndRoles()
activate CONTROL

CONTROL -> SpecializationServ : getAllSpecializationsList()
activate SpecializationServ

SpecializationServ -> SpecializationRepo : findAll()
activate SpecializationRepo

SpecializationRepo --> SpecializationServ : specializationsList
deactivate SpecializationRepo

loop for each specialization in the list

SpecializationServ -> SpecializationDTO ** : toDTO(specialization)
end loop

SpecializationServ --> CONTROL : specializationListDTO
deactivate SpecializationServ

CONTROL -> RoleServ : getAllRolesList()
activate RoleServ

RoleServ -> RoleRepo : findAll()
activate RoleRepo

RoleRepo --> RoleServ : rolesList
deactivate RoleRepo

loop for each role in the list

RoleServ -> RoleDTO ** : toDTO(role)
end loop

RoleServ --> CONTROL : roleListDTO
deactivate RoleServ

CONTROL -> ResponseDTO ** : toDTO(specializationListDTO, roleListDTO)

CONTROL -> CONTROL : json(responseDTO)
activate CONTROL
deactivate CONTROL

CONTROL --> ROUTE : json
deactivate CONTROL

[o<-- ROUTE : OK(json)
deactivate ROUTE

|||

'probably json
[o-> ROUTE : POST(json)
activate ROUTE

ROUTE -> CONTROL : registerOperationType(json)
activate CONTROL

CONTROL -> OPTYDTO ** : toDTO(operationTypeData)

CONTROL -> OPTYServ : registerOperationType(operationTypeDTO)
activate OPTYServ

OPTYServ -> OPTYServ : checkIfOperationExists(operationTypeDTO)
activate OPTYServ

OPTYServ -> OPTYRepo : findByName(OperationTypeName)

activate OPTYRepo

OPTYRepo --> OPTYServ : return
deactivate OPTYRepo

OPTYServ --> OPTYServ : false
deactivate OPTYServ

|||

OPTYServ -> OPTY ** : OperationType(operationTypeDTO)
activate OPTY

loop for all 3 phases (Anesthesia, Surgery, Cleaning)

OPTY -> PHASE ** : Phase(description, duration)
deactivate OPTY
end loop

OPTYServ -> OPTYRepo : save(operationType)
activate OPTYRepo

OPTYRepo --> OPTYServ : return
deactivate OPTYRepo

OPTYServ --> CONTROL : return
deactivate OPTYServ

CONTROL --> ROUTE : return
deactivate CONTROL

alt success
[o<-- ROUTE : 200 OK

else failure

[o<-- ROUTE : 400 Bad Request
deactivate ROUTE
end alt


@enduml