@startuml
title "US 5.1.3. Process View (Level 3) [NO External IAM]"

participant "<<Route>>\n PatientRoute" as ROUTE
participant "<<Controller>>\n PatientController" as CONTROL

participant "<<Service>>\n UserManager" as AUTHServ
participant "<<Repository>>\n UserRepository" as AUTHRepo
participant "<<DTO>>\n UserDTO" as UserDTO
participant "<<Domain>>\n User" as USER
participant "<<Service>>\n EmailService" as EMAILServ
participant "<<Service>>\n TokenManagementService" as TOKENServ
participant "<<component>>\n Token" as TOKEN
participant "<<DTO>>\n TokenDTO" as TOKENDTO
participant "<<Repository>>\n TokenRepo" as TOKENRepo

[o-> ROUTE : POST(credentialsData)
note right : Email is patient's\nPassword is patient's

Activate ROUTE

ROUTE -> CONTROL : createNewPatientUser(credentialsData)

Activate CONTROL

CONTROL -> UserDTO** : toDTO(credentialsData)
CONTROL -> AUTHServ : checkIfUserExists(userDTO)
Activate AUTHServ

AUTHServ -> AUTHRepo : existsById(usernameString)
Activate AUTHRepo

AUTHRepo --> AUTHServ : boolean
note right : Checks if a user\n doesn't exist with\n that email
Deactivate AUTHRepo

AUTHServ --> CONTROL : boolean
Deactivate AUTHServ

CONTROL -> AUTHServ : validatePassword(userDTO.password)
activate AUTHServ 
AUTHServ --> CONTROL : boolean
deactivate AUTHServ

CONTROL -> AUTHServ : createNewUser(userDTO)
Activate AUTHServ
note right : Patient Role\nStatus Non-Active\nPlus all details from patient

AUTHServ -> USER**
AUTHServ -> AUTHRepo : save(user)
Activate AUTHRepo

AUTHRepo --> AUTHServ : user
Deactivate AUTHRepo

AUTHServ --> CONTROL : return
Deactivate 

CONTROL -> EMAILServ : sendTimeSensitiveConfirmationLink(userDTO)
Activate EMAILServ

EMAILServ -> TOKENServ : generateTimeSensitiveConfirmationToken()
activate TOKENServ

TOKENServ -> TOKEN **

TOKENServ -> TOKENRepo : save(token)
activate TOKENRepo

TOKENRepo --> TOKENServ : return
deactivate TOKENRepo

TOKENServ -> TOKENDTO ** : toDTO(token)

TOKENServ --> EMAILServ : tokenDTO
deactivate TOKENServ

EMAILServ -> EMAILServ : sendEmail(emailString, tokenDTO, emailTitle, emailBody)

EMAILServ --> CONTROL : return
deactivate EMAILServ

CONTROL --> ROUTE : return
deactivate CONTROL

<-- ROUTE : success/error

Deactivate ROUTE

@enduml